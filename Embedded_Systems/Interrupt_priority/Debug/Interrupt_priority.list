
Interrupt_priority.elf:     file format elf32-littlearm

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .isr_vector   000001a8  08000000  08000000  00001000  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  1 .text         00000c7c  080001a8  080001a8  000011a8  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .rodata       0000002c  08000e24  08000e24  00001e24  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  3 .ARM.extab    00000000  08000e50  08000e50  00002068  2**0
                  CONTENTS
  4 .ARM          00000000  08000e50  08000e50  00002068  2**0
                  CONTENTS
  5 .preinit_array 00000000  08000e50  08000e50  00002068  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  6 .init_array   00000004  08000e50  08000e50  00001e50  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  7 .fini_array   00000004  08000e54  08000e54  00001e54  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  8 .data         00000068  20000000  08000e58  00002000  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  9 .ccmram       00000000  10000000  10000000  00002068  2**0
                  CONTENTS
 10 .bss          0000016c  20000068  20000068  00002068  2**2
                  ALLOC
 11 ._user_heap_stack 00000604  200001d4  200001d4  00002068  2**0
                  ALLOC
 12 .ARM.attributes 0000002a  00000000  00000000  00002068  2**0
                  CONTENTS, READONLY
 13 .debug_info   000009dc  00000000  00000000  00002092  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 14 .debug_abbrev 0000036f  00000000  00000000  00002a6e  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 15 .debug_aranges 00000130  00000000  00000000  00002de0  2**3
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 16 .debug_rnglists 000000d0  00000000  00000000  00002f10  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 17 .debug_macro  00002d32  00000000  00000000  00002fe0  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 18 .debug_line   00001389  00000000  00000000  00005d12  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 19 .debug_str    0000995f  00000000  00000000  0000709b  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 20 .comment      00000043  00000000  00000000  000109fa  2**0
                  CONTENTS, READONLY
 21 .debug_frame  00000a30  00000000  00000000  00010a40  2**2
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 22 .debug_line_str 00000073  00000000  00000000  00011470  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS

Disassembly of section .text:

080001a8 <__do_global_dtors_aux>:
 80001a8:	b510      	push	{r4, lr}
 80001aa:	4c05      	ldr	r4, [pc, #20]	@ (80001c0 <__do_global_dtors_aux+0x18>)
 80001ac:	7823      	ldrb	r3, [r4, #0]
 80001ae:	b933      	cbnz	r3, 80001be <__do_global_dtors_aux+0x16>
 80001b0:	4b04      	ldr	r3, [pc, #16]	@ (80001c4 <__do_global_dtors_aux+0x1c>)
 80001b2:	b113      	cbz	r3, 80001ba <__do_global_dtors_aux+0x12>
 80001b4:	4804      	ldr	r0, [pc, #16]	@ (80001c8 <__do_global_dtors_aux+0x20>)
 80001b6:	f3af 8000 	nop.w
 80001ba:	2301      	movs	r3, #1
 80001bc:	7023      	strb	r3, [r4, #0]
 80001be:	bd10      	pop	{r4, pc}
 80001c0:	20000068 	.word	0x20000068
 80001c4:	00000000 	.word	0x00000000
 80001c8:	08000e0c 	.word	0x08000e0c

080001cc <frame_dummy>:
 80001cc:	b508      	push	{r3, lr}
 80001ce:	4b03      	ldr	r3, [pc, #12]	@ (80001dc <frame_dummy+0x10>)
 80001d0:	b11b      	cbz	r3, 80001da <frame_dummy+0xe>
 80001d2:	4903      	ldr	r1, [pc, #12]	@ (80001e0 <frame_dummy+0x14>)
 80001d4:	4803      	ldr	r0, [pc, #12]	@ (80001e4 <frame_dummy+0x18>)
 80001d6:	f3af 8000 	nop.w
 80001da:	bd08      	pop	{r3, pc}
 80001dc:	00000000 	.word	0x00000000
 80001e0:	2000006c 	.word	0x2000006c
 80001e4:	08000e0c 	.word	0x08000e0c

080001e8 <configure_priority_for_irqs>:
uint32_t *pNVIC_ISERBase = (uint32_t*)0xE000E100;
uint32_t *pNVIC_ISPRBase = (uint32_t*)0XE000E200;


void configure_priority_for_irqs(uint8_t irq_no, uint8_t priority_value)
{
 80001e8:	b480      	push	{r7}
 80001ea:	b087      	sub	sp, #28
 80001ec:	af00      	add	r7, sp, #0
 80001ee:	4603      	mov	r3, r0
 80001f0:	460a      	mov	r2, r1
 80001f2:	71fb      	strb	r3, [r7, #7]
 80001f4:	4613      	mov	r3, r2
 80001f6:	71bb      	strb	r3, [r7, #6]
	//1. find out iprx
	uint8_t iprx = irq_no / 4;
 80001f8:	79fb      	ldrb	r3, [r7, #7]
 80001fa:	089b      	lsrs	r3, r3, #2
 80001fc:	75fb      	strb	r3, [r7, #23]
	uint32_t *ipr =  pNVIC_IPRBase+iprx;
 80001fe:	4b12      	ldr	r3, [pc, #72]	@ (8000248 <configure_priority_for_irqs+0x60>)
 8000200:	681a      	ldr	r2, [r3, #0]
 8000202:	7dfb      	ldrb	r3, [r7, #23]
 8000204:	009b      	lsls	r3, r3, #2
 8000206:	4413      	add	r3, r2
 8000208:	613b      	str	r3, [r7, #16]

	//2. position in iprx
	uint8_t pos = (irq_no % 4) * 8;
 800020a:	79fb      	ldrb	r3, [r7, #7]
 800020c:	f003 0303 	and.w	r3, r3, #3
 8000210:	b2db      	uxtb	r3, r3
 8000212:	00db      	lsls	r3, r3, #3
 8000214:	73fb      	strb	r3, [r7, #15]

	//3. configure the priority
	*ipr &= ~(0xFF << pos);//clear
 8000216:	693b      	ldr	r3, [r7, #16]
 8000218:	681b      	ldr	r3, [r3, #0]
 800021a:	7bfa      	ldrb	r2, [r7, #15]
 800021c:	21ff      	movs	r1, #255	@ 0xff
 800021e:	fa01 f202 	lsl.w	r2, r1, r2
 8000222:	43d2      	mvns	r2, r2
 8000224:	401a      	ands	r2, r3
 8000226:	693b      	ldr	r3, [r7, #16]
 8000228:	601a      	str	r2, [r3, #0]
	*ipr |=  (priority_value << pos);
 800022a:	693b      	ldr	r3, [r7, #16]
 800022c:	681b      	ldr	r3, [r3, #0]
 800022e:	79b9      	ldrb	r1, [r7, #6]
 8000230:	7bfa      	ldrb	r2, [r7, #15]
 8000232:	fa01 f202 	lsl.w	r2, r1, r2
 8000236:	431a      	orrs	r2, r3
 8000238:	693b      	ldr	r3, [r7, #16]
 800023a:	601a      	str	r2, [r3, #0]

}
 800023c:	bf00      	nop
 800023e:	371c      	adds	r7, #28
 8000240:	46bd      	mov	sp, r7
 8000242:	bc80      	pop	{r7}
 8000244:	4770      	bx	lr
 8000246:	bf00      	nop
 8000248:	20000000 	.word	0x20000000

0800024c <main>:

int main(void)
{
 800024c:	b580      	push	{r7, lr}
 800024e:	af00      	add	r7, sp, #0
	//1. Lets configure the priority for the peripherals
	 configure_priority_for_irqs(IRQNO_TIMER2,0x80);
 8000250:	2180      	movs	r1, #128	@ 0x80
 8000252:	201c      	movs	r0, #28
 8000254:	f7ff ffc8 	bl	80001e8 <configure_priority_for_irqs>
	 configure_priority_for_irqs(IRQNO_I2C1,0x70);
 8000258:	2170      	movs	r1, #112	@ 0x70
 800025a:	201f      	movs	r0, #31
 800025c:	f7ff ffc4 	bl	80001e8 <configure_priority_for_irqs>

	//2. Set the interrupt pending bit in the NVIC PR
	 *pNVIC_ISPRBase |= ( 1 << IRQNO_TIMER2);
 8000260:	4b0d      	ldr	r3, [pc, #52]	@ (8000298 <main+0x4c>)
 8000262:	681b      	ldr	r3, [r3, #0]
 8000264:	681a      	ldr	r2, [r3, #0]
 8000266:	4b0c      	ldr	r3, [pc, #48]	@ (8000298 <main+0x4c>)
 8000268:	681b      	ldr	r3, [r3, #0]
 800026a:	f042 5280 	orr.w	r2, r2, #268435456	@ 0x10000000
 800026e:	601a      	str	r2, [r3, #0]

	//3. Enable the IRQs in NVIC ISER
	 *pNVIC_ISERBase |= ( 1 << IRQNO_I2C1);
 8000270:	4b0a      	ldr	r3, [pc, #40]	@ (800029c <main+0x50>)
 8000272:	681b      	ldr	r3, [r3, #0]
 8000274:	681a      	ldr	r2, [r3, #0]
 8000276:	4b09      	ldr	r3, [pc, #36]	@ (800029c <main+0x50>)
 8000278:	681b      	ldr	r3, [r3, #0]
 800027a:	f042 4200 	orr.w	r2, r2, #2147483648	@ 0x80000000
 800027e:	601a      	str	r2, [r3, #0]
	 *pNVIC_ISERBase |= ( 1 << IRQNO_TIMER2);
 8000280:	4b06      	ldr	r3, [pc, #24]	@ (800029c <main+0x50>)
 8000282:	681b      	ldr	r3, [r3, #0]
 8000284:	681a      	ldr	r2, [r3, #0]
 8000286:	4b05      	ldr	r3, [pc, #20]	@ (800029c <main+0x50>)
 8000288:	681b      	ldr	r3, [r3, #0]
 800028a:	f042 5280 	orr.w	r2, r2, #268435456	@ 0x10000000
 800028e:	601a      	str	r2, [r3, #0]
 8000290:	2300      	movs	r3, #0


}
 8000292:	4618      	mov	r0, r3
 8000294:	bd80      	pop	{r7, pc}
 8000296:	bf00      	nop
 8000298:	20000008 	.word	0x20000008
 800029c:	20000004 	.word	0x20000004

080002a0 <TIM2_IRQHandler>:

//isrs

void TIM2_IRQHandler(void)
{
 80002a0:	b580      	push	{r7, lr}
 80002a2:	af00      	add	r7, sp, #0
  printf("[TIM2_IRQHandler]\n");
 80002a4:	4806      	ldr	r0, [pc, #24]	@ (80002c0 <TIM2_IRQHandler+0x20>)
 80002a6:	f000 fa21 	bl	80006ec <puts>
  /*Here, we are pending I2C interrupt request manually */
  *pNVIC_ISPRBase |= ( 1 << IRQNO_I2C1);
 80002aa:	4b06      	ldr	r3, [pc, #24]	@ (80002c4 <TIM2_IRQHandler+0x24>)
 80002ac:	681b      	ldr	r3, [r3, #0]
 80002ae:	681a      	ldr	r2, [r3, #0]
 80002b0:	4b04      	ldr	r3, [pc, #16]	@ (80002c4 <TIM2_IRQHandler+0x24>)
 80002b2:	681b      	ldr	r3, [r3, #0]
 80002b4:	f042 4200 	orr.w	r2, r2, #2147483648	@ 0x80000000
 80002b8:	601a      	str	r2, [r3, #0]
  while(1);
 80002ba:	bf00      	nop
 80002bc:	e7fd      	b.n	80002ba <TIM2_IRQHandler+0x1a>
 80002be:	bf00      	nop
 80002c0:	08000e24 	.word	0x08000e24
 80002c4:	20000008 	.word	0x20000008

080002c8 <I2C1_EV_IRQHandler>:

}


void I2C1_EV_IRQHandler(void)
{
 80002c8:	b580      	push	{r7, lr}
 80002ca:	af00      	add	r7, sp, #0
  printf("[I2C1_EV_IRQHandler]\n");
 80002cc:	4802      	ldr	r0, [pc, #8]	@ (80002d8 <I2C1_EV_IRQHandler+0x10>)
 80002ce:	f000 fa0d 	bl	80006ec <puts>
}
 80002d2:	bf00      	nop
 80002d4:	bd80      	pop	{r7, pc}
 80002d6:	bf00      	nop
 80002d8:	08000e38 	.word	0x08000e38

080002dc <ITM_SendChar>:
/* ITM register addresses */
#define ITM_STIMULUS_PORT0   	*((volatile uint32_t*) 0xE0000000 )
#define ITM_TRACE_EN          	*((volatile uint32_t*) 0xE0000E00 )

void ITM_SendChar(uint8_t ch)
{
 80002dc:	b480      	push	{r7}
 80002de:	b083      	sub	sp, #12
 80002e0:	af00      	add	r7, sp, #0
 80002e2:	4603      	mov	r3, r0
 80002e4:	71fb      	strb	r3, [r7, #7]

	//Enable TRCENA
	DEMCR |= ( 1 << 24);
 80002e6:	4b0e      	ldr	r3, [pc, #56]	@ (8000320 <ITM_SendChar+0x44>)
 80002e8:	681b      	ldr	r3, [r3, #0]
 80002ea:	4a0d      	ldr	r2, [pc, #52]	@ (8000320 <ITM_SendChar+0x44>)
 80002ec:	f043 7380 	orr.w	r3, r3, #16777216	@ 0x1000000
 80002f0:	6013      	str	r3, [r2, #0]

	//enable stimulus port 0
	ITM_TRACE_EN |= ( 1 << 0);
 80002f2:	4b0c      	ldr	r3, [pc, #48]	@ (8000324 <ITM_SendChar+0x48>)
 80002f4:	681b      	ldr	r3, [r3, #0]
 80002f6:	4a0b      	ldr	r2, [pc, #44]	@ (8000324 <ITM_SendChar+0x48>)
 80002f8:	f043 0301 	orr.w	r3, r3, #1
 80002fc:	6013      	str	r3, [r2, #0]

	// read FIFO status in bit [0]:
	while(!(ITM_STIMULUS_PORT0 & 1));
 80002fe:	bf00      	nop
 8000300:	f04f 4360 	mov.w	r3, #3758096384	@ 0xe0000000
 8000304:	681b      	ldr	r3, [r3, #0]
 8000306:	f003 0301 	and.w	r3, r3, #1
 800030a:	2b00      	cmp	r3, #0
 800030c:	d0f8      	beq.n	8000300 <ITM_SendChar+0x24>

	//Write to ITM stimulus port0
	ITM_STIMULUS_PORT0 = ch;
 800030e:	f04f 4260 	mov.w	r2, #3758096384	@ 0xe0000000
 8000312:	79fb      	ldrb	r3, [r7, #7]
 8000314:	6013      	str	r3, [r2, #0]
}
 8000316:	bf00      	nop
 8000318:	370c      	adds	r7, #12
 800031a:	46bd      	mov	sp, r7
 800031c:	bc80      	pop	{r7}
 800031e:	4770      	bx	lr
 8000320:	e000edfc 	.word	0xe000edfc
 8000324:	e0000e00 	.word	0xe0000e00

08000328 <_read>:
  _kill(status, -1);
  while (1) {}    /* Make sure we hang here */
}

__attribute__((weak)) int _read(int file, char *ptr, int len)
{
 8000328:	b580      	push	{r7, lr}
 800032a:	b086      	sub	sp, #24
 800032c:	af00      	add	r7, sp, #0
 800032e:	60f8      	str	r0, [r7, #12]
 8000330:	60b9      	str	r1, [r7, #8]
 8000332:	607a      	str	r2, [r7, #4]
  (void)file;
  int DataIdx;

  for (DataIdx = 0; DataIdx < len; DataIdx++)
 8000334:	2300      	movs	r3, #0
 8000336:	617b      	str	r3, [r7, #20]
 8000338:	e00a      	b.n	8000350 <_read+0x28>
  {
    *ptr++ = __io_getchar();
 800033a:	f3af 8000 	nop.w
 800033e:	4601      	mov	r1, r0
 8000340:	68bb      	ldr	r3, [r7, #8]
 8000342:	1c5a      	adds	r2, r3, #1
 8000344:	60ba      	str	r2, [r7, #8]
 8000346:	b2ca      	uxtb	r2, r1
 8000348:	701a      	strb	r2, [r3, #0]
  for (DataIdx = 0; DataIdx < len; DataIdx++)
 800034a:	697b      	ldr	r3, [r7, #20]
 800034c:	3301      	adds	r3, #1
 800034e:	617b      	str	r3, [r7, #20]
 8000350:	697a      	ldr	r2, [r7, #20]
 8000352:	687b      	ldr	r3, [r7, #4]
 8000354:	429a      	cmp	r2, r3
 8000356:	dbf0      	blt.n	800033a <_read+0x12>
  }

  return len;
 8000358:	687b      	ldr	r3, [r7, #4]
}
 800035a:	4618      	mov	r0, r3
 800035c:	3718      	adds	r7, #24
 800035e:	46bd      	mov	sp, r7
 8000360:	bd80      	pop	{r7, pc}

08000362 <_write>:

__attribute__((weak)) int _write(int file, char *ptr, int len)
{
 8000362:	b580      	push	{r7, lr}
 8000364:	b086      	sub	sp, #24
 8000366:	af00      	add	r7, sp, #0
 8000368:	60f8      	str	r0, [r7, #12]
 800036a:	60b9      	str	r1, [r7, #8]
 800036c:	607a      	str	r2, [r7, #4]
  (void)file;
  int DataIdx;

  for (DataIdx = 0; DataIdx < len; DataIdx++)
 800036e:	2300      	movs	r3, #0
 8000370:	617b      	str	r3, [r7, #20]
 8000372:	e009      	b.n	8000388 <_write+0x26>
  {
    //__io_putchar(*ptr++);
	  ITM_SendChar(*ptr++);
 8000374:	68bb      	ldr	r3, [r7, #8]
 8000376:	1c5a      	adds	r2, r3, #1
 8000378:	60ba      	str	r2, [r7, #8]
 800037a:	781b      	ldrb	r3, [r3, #0]
 800037c:	4618      	mov	r0, r3
 800037e:	f7ff ffad 	bl	80002dc <ITM_SendChar>
  for (DataIdx = 0; DataIdx < len; DataIdx++)
 8000382:	697b      	ldr	r3, [r7, #20]
 8000384:	3301      	adds	r3, #1
 8000386:	617b      	str	r3, [r7, #20]
 8000388:	697a      	ldr	r2, [r7, #20]
 800038a:	687b      	ldr	r3, [r7, #4]
 800038c:	429a      	cmp	r2, r3
 800038e:	dbf1      	blt.n	8000374 <_write+0x12>
  }
  return len;
 8000390:	687b      	ldr	r3, [r7, #4]
}
 8000392:	4618      	mov	r0, r3
 8000394:	3718      	adds	r7, #24
 8000396:	46bd      	mov	sp, r7
 8000398:	bd80      	pop	{r7, pc}

0800039a <_close>:

int _close(int file)
{
 800039a:	b480      	push	{r7}
 800039c:	b083      	sub	sp, #12
 800039e:	af00      	add	r7, sp, #0
 80003a0:	6078      	str	r0, [r7, #4]
  (void)file;
  return -1;
 80003a2:	f04f 33ff 	mov.w	r3, #4294967295	@ 0xffffffff
}
 80003a6:	4618      	mov	r0, r3
 80003a8:	370c      	adds	r7, #12
 80003aa:	46bd      	mov	sp, r7
 80003ac:	bc80      	pop	{r7}
 80003ae:	4770      	bx	lr

080003b0 <_fstat>:


int _fstat(int file, struct stat *st)
{
 80003b0:	b480      	push	{r7}
 80003b2:	b083      	sub	sp, #12
 80003b4:	af00      	add	r7, sp, #0
 80003b6:	6078      	str	r0, [r7, #4]
 80003b8:	6039      	str	r1, [r7, #0]
  (void)file;
  st->st_mode = S_IFCHR;
 80003ba:	683b      	ldr	r3, [r7, #0]
 80003bc:	f44f 5200 	mov.w	r2, #8192	@ 0x2000
 80003c0:	605a      	str	r2, [r3, #4]
  return 0;
 80003c2:	2300      	movs	r3, #0
}
 80003c4:	4618      	mov	r0, r3
 80003c6:	370c      	adds	r7, #12
 80003c8:	46bd      	mov	sp, r7
 80003ca:	bc80      	pop	{r7}
 80003cc:	4770      	bx	lr

080003ce <_isatty>:

int _isatty(int file)
{
 80003ce:	b480      	push	{r7}
 80003d0:	b083      	sub	sp, #12
 80003d2:	af00      	add	r7, sp, #0
 80003d4:	6078      	str	r0, [r7, #4]
  (void)file;
  return 1;
 80003d6:	2301      	movs	r3, #1
}
 80003d8:	4618      	mov	r0, r3
 80003da:	370c      	adds	r7, #12
 80003dc:	46bd      	mov	sp, r7
 80003de:	bc80      	pop	{r7}
 80003e0:	4770      	bx	lr

080003e2 <_lseek>:

int _lseek(int file, int ptr, int dir)
{
 80003e2:	b480      	push	{r7}
 80003e4:	b085      	sub	sp, #20
 80003e6:	af00      	add	r7, sp, #0
 80003e8:	60f8      	str	r0, [r7, #12]
 80003ea:	60b9      	str	r1, [r7, #8]
 80003ec:	607a      	str	r2, [r7, #4]
  (void)file;
  (void)ptr;
  (void)dir;
  return 0;
 80003ee:	2300      	movs	r3, #0
}
 80003f0:	4618      	mov	r0, r3
 80003f2:	3714      	adds	r7, #20
 80003f4:	46bd      	mov	sp, r7
 80003f6:	bc80      	pop	{r7}
 80003f8:	4770      	bx	lr
	...

080003fc <_sbrk>:
 *
 * @param incr Memory size
 * @return Pointer to allocated memory
 */
void *_sbrk(ptrdiff_t incr)
{
 80003fc:	b580      	push	{r7, lr}
 80003fe:	b086      	sub	sp, #24
 8000400:	af00      	add	r7, sp, #0
 8000402:	6078      	str	r0, [r7, #4]
  extern uint8_t _end; /* Symbol defined in the linker script */
  extern uint8_t _estack; /* Symbol defined in the linker script */
  extern uint32_t _Min_Stack_Size; /* Symbol defined in the linker script */
  const uint32_t stack_limit = (uint32_t)&_estack - (uint32_t)&_Min_Stack_Size;
 8000404:	4a14      	ldr	r2, [pc, #80]	@ (8000458 <_sbrk+0x5c>)
 8000406:	4b15      	ldr	r3, [pc, #84]	@ (800045c <_sbrk+0x60>)
 8000408:	1ad3      	subs	r3, r2, r3
 800040a:	617b      	str	r3, [r7, #20]
  const uint8_t *max_heap = (uint8_t *)stack_limit;
 800040c:	697b      	ldr	r3, [r7, #20]
 800040e:	613b      	str	r3, [r7, #16]
  uint8_t *prev_heap_end;

  /* Initialize heap end at first call */
  if (NULL == __sbrk_heap_end)
 8000410:	4b13      	ldr	r3, [pc, #76]	@ (8000460 <_sbrk+0x64>)
 8000412:	681b      	ldr	r3, [r3, #0]
 8000414:	2b00      	cmp	r3, #0
 8000416:	d102      	bne.n	800041e <_sbrk+0x22>
  {
    __sbrk_heap_end = &_end;
 8000418:	4b11      	ldr	r3, [pc, #68]	@ (8000460 <_sbrk+0x64>)
 800041a:	4a12      	ldr	r2, [pc, #72]	@ (8000464 <_sbrk+0x68>)
 800041c:	601a      	str	r2, [r3, #0]
  }

  /* Protect heap from growing into the reserved MSP stack */
  if (__sbrk_heap_end + incr > max_heap)
 800041e:	4b10      	ldr	r3, [pc, #64]	@ (8000460 <_sbrk+0x64>)
 8000420:	681a      	ldr	r2, [r3, #0]
 8000422:	687b      	ldr	r3, [r7, #4]
 8000424:	4413      	add	r3, r2
 8000426:	693a      	ldr	r2, [r7, #16]
 8000428:	429a      	cmp	r2, r3
 800042a:	d207      	bcs.n	800043c <_sbrk+0x40>
  {
    errno = ENOMEM;
 800042c:	f000 f96e 	bl	800070c <__errno>
 8000430:	4603      	mov	r3, r0
 8000432:	220c      	movs	r2, #12
 8000434:	601a      	str	r2, [r3, #0]
    return (void *)-1;
 8000436:	f04f 33ff 	mov.w	r3, #4294967295	@ 0xffffffff
 800043a:	e009      	b.n	8000450 <_sbrk+0x54>
  }

  prev_heap_end = __sbrk_heap_end;
 800043c:	4b08      	ldr	r3, [pc, #32]	@ (8000460 <_sbrk+0x64>)
 800043e:	681b      	ldr	r3, [r3, #0]
 8000440:	60fb      	str	r3, [r7, #12]
  __sbrk_heap_end += incr;
 8000442:	4b07      	ldr	r3, [pc, #28]	@ (8000460 <_sbrk+0x64>)
 8000444:	681a      	ldr	r2, [r3, #0]
 8000446:	687b      	ldr	r3, [r7, #4]
 8000448:	4413      	add	r3, r2
 800044a:	4a05      	ldr	r2, [pc, #20]	@ (8000460 <_sbrk+0x64>)
 800044c:	6013      	str	r3, [r2, #0]

  return (void *)prev_heap_end;
 800044e:	68fb      	ldr	r3, [r7, #12]
}
 8000450:	4618      	mov	r0, r3
 8000452:	3718      	adds	r7, #24
 8000454:	46bd      	mov	sp, r7
 8000456:	bd80      	pop	{r7, pc}
 8000458:	20020000 	.word	0x20020000
 800045c:	00000400 	.word	0x00000400
 8000460:	20000084 	.word	0x20000084
 8000464:	200001d8 	.word	0x200001d8

08000468 <Reset_Handler>:

  .section .text.Reset_Handler
  .weak Reset_Handler
  .type Reset_Handler, %function
Reset_Handler:
  ldr   r0, =_estack
 8000468:	480d      	ldr	r0, [pc, #52]	@ (80004a0 <LoopForever+0x2>)
  mov   sp, r0          /* set stack pointer */
 800046a:	4685      	mov	sp, r0
/* Call the clock system initialization function.*/
  bl  SystemInit
 800046c:	f3af 8000 	nop.w

/* Copy the data segment initializers from flash to SRAM */
  ldr r0, =_sdata
 8000470:	480c      	ldr	r0, [pc, #48]	@ (80004a4 <LoopForever+0x6>)
  ldr r1, =_edata
 8000472:	490d      	ldr	r1, [pc, #52]	@ (80004a8 <LoopForever+0xa>)
  ldr r2, =_sidata
 8000474:	4a0d      	ldr	r2, [pc, #52]	@ (80004ac <LoopForever+0xe>)
  movs r3, #0
 8000476:	2300      	movs	r3, #0
  b LoopCopyDataInit
 8000478:	e002      	b.n	8000480 <LoopCopyDataInit>

0800047a <CopyDataInit>:

CopyDataInit:
  ldr r4, [r2, r3]
 800047a:	58d4      	ldr	r4, [r2, r3]
  str r4, [r0, r3]
 800047c:	50c4      	str	r4, [r0, r3]
  adds r3, r3, #4
 800047e:	3304      	adds	r3, #4

08000480 <LoopCopyDataInit>:

LoopCopyDataInit:
  adds r4, r0, r3
 8000480:	18c4      	adds	r4, r0, r3
  cmp r4, r1
 8000482:	428c      	cmp	r4, r1
  bcc CopyDataInit
 8000484:	d3f9      	bcc.n	800047a <CopyDataInit>

/* Zero fill the bss segment. */
  ldr r2, =_sbss
 8000486:	4a0a      	ldr	r2, [pc, #40]	@ (80004b0 <LoopForever+0x12>)
  ldr r4, =_ebss
 8000488:	4c0a      	ldr	r4, [pc, #40]	@ (80004b4 <LoopForever+0x16>)
  movs r3, #0
 800048a:	2300      	movs	r3, #0
  b LoopFillZerobss
 800048c:	e001      	b.n	8000492 <LoopFillZerobss>

0800048e <FillZerobss>:

FillZerobss:
  str  r3, [r2]
 800048e:	6013      	str	r3, [r2, #0]
  adds r2, r2, #4
 8000490:	3204      	adds	r2, #4

08000492 <LoopFillZerobss>:

LoopFillZerobss:
  cmp r2, r4
 8000492:	42a2      	cmp	r2, r4
  bcc FillZerobss
 8000494:	d3fb      	bcc.n	800048e <FillZerobss>

/* Call static constructors */
  bl __libc_init_array
 8000496:	f000 f93f 	bl	8000718 <__libc_init_array>
/* Call the application's entry point.*/
  bl main
 800049a:	f7ff fed7 	bl	800024c <main>

0800049e <LoopForever>:

LoopForever:
  b LoopForever
 800049e:	e7fe      	b.n	800049e <LoopForever>
  ldr   r0, =_estack
 80004a0:	20020000 	.word	0x20020000
  ldr r0, =_sdata
 80004a4:	20000000 	.word	0x20000000
  ldr r1, =_edata
 80004a8:	20000068 	.word	0x20000068
  ldr r2, =_sidata
 80004ac:	08000e58 	.word	0x08000e58
  ldr r2, =_sbss
 80004b0:	20000068 	.word	0x20000068
  ldr r4, =_ebss
 80004b4:	200001d4 	.word	0x200001d4

080004b8 <ADC_IRQHandler>:
 * @retval : None
*/
  .section .text.Default_Handler,"ax",%progbits
Default_Handler:
Infinite_Loop:
  b Infinite_Loop
 80004b8:	e7fe      	b.n	80004b8 <ADC_IRQHandler>
	...

080004bc <std>:
 80004bc:	2300      	movs	r3, #0
 80004be:	b510      	push	{r4, lr}
 80004c0:	4604      	mov	r4, r0
 80004c2:	e9c0 3300 	strd	r3, r3, [r0]
 80004c6:	e9c0 3304 	strd	r3, r3, [r0, #16]
 80004ca:	6083      	str	r3, [r0, #8]
 80004cc:	8181      	strh	r1, [r0, #12]
 80004ce:	6643      	str	r3, [r0, #100]	@ 0x64
 80004d0:	81c2      	strh	r2, [r0, #14]
 80004d2:	6183      	str	r3, [r0, #24]
 80004d4:	4619      	mov	r1, r3
 80004d6:	2208      	movs	r2, #8
 80004d8:	305c      	adds	r0, #92	@ 0x5c
 80004da:	f000 f90f 	bl	80006fc <memset>
 80004de:	4b0d      	ldr	r3, [pc, #52]	@ (8000514 <std+0x58>)
 80004e0:	6263      	str	r3, [r4, #36]	@ 0x24
 80004e2:	4b0d      	ldr	r3, [pc, #52]	@ (8000518 <std+0x5c>)
 80004e4:	62a3      	str	r3, [r4, #40]	@ 0x28
 80004e6:	4b0d      	ldr	r3, [pc, #52]	@ (800051c <std+0x60>)
 80004e8:	62e3      	str	r3, [r4, #44]	@ 0x2c
 80004ea:	4b0d      	ldr	r3, [pc, #52]	@ (8000520 <std+0x64>)
 80004ec:	6323      	str	r3, [r4, #48]	@ 0x30
 80004ee:	4b0d      	ldr	r3, [pc, #52]	@ (8000524 <std+0x68>)
 80004f0:	6224      	str	r4, [r4, #32]
 80004f2:	429c      	cmp	r4, r3
 80004f4:	d006      	beq.n	8000504 <std+0x48>
 80004f6:	f103 0268 	add.w	r2, r3, #104	@ 0x68
 80004fa:	4294      	cmp	r4, r2
 80004fc:	d002      	beq.n	8000504 <std+0x48>
 80004fe:	33d0      	adds	r3, #208	@ 0xd0
 8000500:	429c      	cmp	r4, r3
 8000502:	d105      	bne.n	8000510 <std+0x54>
 8000504:	f104 0058 	add.w	r0, r4, #88	@ 0x58
 8000508:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 800050c:	f000 b928 	b.w	8000760 <__retarget_lock_init_recursive>
 8000510:	bd10      	pop	{r4, pc}
 8000512:	bf00      	nop
 8000514:	08000a15 	.word	0x08000a15
 8000518:	08000a37 	.word	0x08000a37
 800051c:	08000a6f 	.word	0x08000a6f
 8000520:	08000a93 	.word	0x08000a93
 8000524:	20000088 	.word	0x20000088

08000528 <stdio_exit_handler>:
 8000528:	4a02      	ldr	r2, [pc, #8]	@ (8000534 <stdio_exit_handler+0xc>)
 800052a:	4903      	ldr	r1, [pc, #12]	@ (8000538 <stdio_exit_handler+0x10>)
 800052c:	4803      	ldr	r0, [pc, #12]	@ (800053c <stdio_exit_handler+0x14>)
 800052e:	f000 b869 	b.w	8000604 <_fwalk_sglue>
 8000532:	bf00      	nop
 8000534:	2000000c 	.word	0x2000000c
 8000538:	080009ad 	.word	0x080009ad
 800053c:	2000001c 	.word	0x2000001c

08000540 <cleanup_stdio>:
 8000540:	6841      	ldr	r1, [r0, #4]
 8000542:	4b0c      	ldr	r3, [pc, #48]	@ (8000574 <cleanup_stdio+0x34>)
 8000544:	4299      	cmp	r1, r3
 8000546:	b510      	push	{r4, lr}
 8000548:	4604      	mov	r4, r0
 800054a:	d001      	beq.n	8000550 <cleanup_stdio+0x10>
 800054c:	f000 fa2e 	bl	80009ac <_fflush_r>
 8000550:	68a1      	ldr	r1, [r4, #8]
 8000552:	4b09      	ldr	r3, [pc, #36]	@ (8000578 <cleanup_stdio+0x38>)
 8000554:	4299      	cmp	r1, r3
 8000556:	d002      	beq.n	800055e <cleanup_stdio+0x1e>
 8000558:	4620      	mov	r0, r4
 800055a:	f000 fa27 	bl	80009ac <_fflush_r>
 800055e:	68e1      	ldr	r1, [r4, #12]
 8000560:	4b06      	ldr	r3, [pc, #24]	@ (800057c <cleanup_stdio+0x3c>)
 8000562:	4299      	cmp	r1, r3
 8000564:	d004      	beq.n	8000570 <cleanup_stdio+0x30>
 8000566:	4620      	mov	r0, r4
 8000568:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 800056c:	f000 ba1e 	b.w	80009ac <_fflush_r>
 8000570:	bd10      	pop	{r4, pc}
 8000572:	bf00      	nop
 8000574:	20000088 	.word	0x20000088
 8000578:	200000f0 	.word	0x200000f0
 800057c:	20000158 	.word	0x20000158

08000580 <global_stdio_init.part.0>:
 8000580:	b510      	push	{r4, lr}
 8000582:	4b0b      	ldr	r3, [pc, #44]	@ (80005b0 <global_stdio_init.part.0+0x30>)
 8000584:	4c0b      	ldr	r4, [pc, #44]	@ (80005b4 <global_stdio_init.part.0+0x34>)
 8000586:	4a0c      	ldr	r2, [pc, #48]	@ (80005b8 <global_stdio_init.part.0+0x38>)
 8000588:	601a      	str	r2, [r3, #0]
 800058a:	4620      	mov	r0, r4
 800058c:	2200      	movs	r2, #0
 800058e:	2104      	movs	r1, #4
 8000590:	f7ff ff94 	bl	80004bc <std>
 8000594:	f104 0068 	add.w	r0, r4, #104	@ 0x68
 8000598:	2201      	movs	r2, #1
 800059a:	2109      	movs	r1, #9
 800059c:	f7ff ff8e 	bl	80004bc <std>
 80005a0:	f104 00d0 	add.w	r0, r4, #208	@ 0xd0
 80005a4:	2202      	movs	r2, #2
 80005a6:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 80005aa:	2112      	movs	r1, #18
 80005ac:	f7ff bf86 	b.w	80004bc <std>
 80005b0:	200001c0 	.word	0x200001c0
 80005b4:	20000088 	.word	0x20000088
 80005b8:	08000529 	.word	0x08000529

080005bc <__sfp_lock_acquire>:
 80005bc:	4801      	ldr	r0, [pc, #4]	@ (80005c4 <__sfp_lock_acquire+0x8>)
 80005be:	f000 b8d0 	b.w	8000762 <__retarget_lock_acquire_recursive>
 80005c2:	bf00      	nop
 80005c4:	200001c5 	.word	0x200001c5

080005c8 <__sfp_lock_release>:
 80005c8:	4801      	ldr	r0, [pc, #4]	@ (80005d0 <__sfp_lock_release+0x8>)
 80005ca:	f000 b8cb 	b.w	8000764 <__retarget_lock_release_recursive>
 80005ce:	bf00      	nop
 80005d0:	200001c5 	.word	0x200001c5

080005d4 <__sinit>:
 80005d4:	b510      	push	{r4, lr}
 80005d6:	4604      	mov	r4, r0
 80005d8:	f7ff fff0 	bl	80005bc <__sfp_lock_acquire>
 80005dc:	6a23      	ldr	r3, [r4, #32]
 80005de:	b11b      	cbz	r3, 80005e8 <__sinit+0x14>
 80005e0:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 80005e4:	f7ff bff0 	b.w	80005c8 <__sfp_lock_release>
 80005e8:	4b04      	ldr	r3, [pc, #16]	@ (80005fc <__sinit+0x28>)
 80005ea:	6223      	str	r3, [r4, #32]
 80005ec:	4b04      	ldr	r3, [pc, #16]	@ (8000600 <__sinit+0x2c>)
 80005ee:	681b      	ldr	r3, [r3, #0]
 80005f0:	2b00      	cmp	r3, #0
 80005f2:	d1f5      	bne.n	80005e0 <__sinit+0xc>
 80005f4:	f7ff ffc4 	bl	8000580 <global_stdio_init.part.0>
 80005f8:	e7f2      	b.n	80005e0 <__sinit+0xc>
 80005fa:	bf00      	nop
 80005fc:	08000541 	.word	0x08000541
 8000600:	200001c0 	.word	0x200001c0

08000604 <_fwalk_sglue>:
 8000604:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 8000608:	4607      	mov	r7, r0
 800060a:	4688      	mov	r8, r1
 800060c:	4614      	mov	r4, r2
 800060e:	2600      	movs	r6, #0
 8000610:	e9d4 9501 	ldrd	r9, r5, [r4, #4]
 8000614:	f1b9 0901 	subs.w	r9, r9, #1
 8000618:	d505      	bpl.n	8000626 <_fwalk_sglue+0x22>
 800061a:	6824      	ldr	r4, [r4, #0]
 800061c:	2c00      	cmp	r4, #0
 800061e:	d1f7      	bne.n	8000610 <_fwalk_sglue+0xc>
 8000620:	4630      	mov	r0, r6
 8000622:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 8000626:	89ab      	ldrh	r3, [r5, #12]
 8000628:	2b01      	cmp	r3, #1
 800062a:	d907      	bls.n	800063c <_fwalk_sglue+0x38>
 800062c:	f9b5 300e 	ldrsh.w	r3, [r5, #14]
 8000630:	3301      	adds	r3, #1
 8000632:	d003      	beq.n	800063c <_fwalk_sglue+0x38>
 8000634:	4629      	mov	r1, r5
 8000636:	4638      	mov	r0, r7
 8000638:	47c0      	blx	r8
 800063a:	4306      	orrs	r6, r0
 800063c:	3568      	adds	r5, #104	@ 0x68
 800063e:	e7e9      	b.n	8000614 <_fwalk_sglue+0x10>

08000640 <_puts_r>:
 8000640:	6a03      	ldr	r3, [r0, #32]
 8000642:	b570      	push	{r4, r5, r6, lr}
 8000644:	6884      	ldr	r4, [r0, #8]
 8000646:	4605      	mov	r5, r0
 8000648:	460e      	mov	r6, r1
 800064a:	b90b      	cbnz	r3, 8000650 <_puts_r+0x10>
 800064c:	f7ff ffc2 	bl	80005d4 <__sinit>
 8000650:	6e63      	ldr	r3, [r4, #100]	@ 0x64
 8000652:	07db      	lsls	r3, r3, #31
 8000654:	d405      	bmi.n	8000662 <_puts_r+0x22>
 8000656:	89a3      	ldrh	r3, [r4, #12]
 8000658:	0598      	lsls	r0, r3, #22
 800065a:	d402      	bmi.n	8000662 <_puts_r+0x22>
 800065c:	6da0      	ldr	r0, [r4, #88]	@ 0x58
 800065e:	f000 f880 	bl	8000762 <__retarget_lock_acquire_recursive>
 8000662:	89a3      	ldrh	r3, [r4, #12]
 8000664:	0719      	lsls	r1, r3, #28
 8000666:	d502      	bpl.n	800066e <_puts_r+0x2e>
 8000668:	6923      	ldr	r3, [r4, #16]
 800066a:	2b00      	cmp	r3, #0
 800066c:	d135      	bne.n	80006da <_puts_r+0x9a>
 800066e:	4621      	mov	r1, r4
 8000670:	4628      	mov	r0, r5
 8000672:	f000 fa51 	bl	8000b18 <__swsetup_r>
 8000676:	b380      	cbz	r0, 80006da <_puts_r+0x9a>
 8000678:	f04f 35ff 	mov.w	r5, #4294967295	@ 0xffffffff
 800067c:	6e63      	ldr	r3, [r4, #100]	@ 0x64
 800067e:	07da      	lsls	r2, r3, #31
 8000680:	d405      	bmi.n	800068e <_puts_r+0x4e>
 8000682:	89a3      	ldrh	r3, [r4, #12]
 8000684:	059b      	lsls	r3, r3, #22
 8000686:	d402      	bmi.n	800068e <_puts_r+0x4e>
 8000688:	6da0      	ldr	r0, [r4, #88]	@ 0x58
 800068a:	f000 f86b 	bl	8000764 <__retarget_lock_release_recursive>
 800068e:	4628      	mov	r0, r5
 8000690:	bd70      	pop	{r4, r5, r6, pc}
 8000692:	2b00      	cmp	r3, #0
 8000694:	da04      	bge.n	80006a0 <_puts_r+0x60>
 8000696:	69a2      	ldr	r2, [r4, #24]
 8000698:	429a      	cmp	r2, r3
 800069a:	dc17      	bgt.n	80006cc <_puts_r+0x8c>
 800069c:	290a      	cmp	r1, #10
 800069e:	d015      	beq.n	80006cc <_puts_r+0x8c>
 80006a0:	6823      	ldr	r3, [r4, #0]
 80006a2:	1c5a      	adds	r2, r3, #1
 80006a4:	6022      	str	r2, [r4, #0]
 80006a6:	7019      	strb	r1, [r3, #0]
 80006a8:	68a3      	ldr	r3, [r4, #8]
 80006aa:	f816 1f01 	ldrb.w	r1, [r6, #1]!
 80006ae:	3b01      	subs	r3, #1
 80006b0:	60a3      	str	r3, [r4, #8]
 80006b2:	2900      	cmp	r1, #0
 80006b4:	d1ed      	bne.n	8000692 <_puts_r+0x52>
 80006b6:	2b00      	cmp	r3, #0
 80006b8:	da11      	bge.n	80006de <_puts_r+0x9e>
 80006ba:	4622      	mov	r2, r4
 80006bc:	210a      	movs	r1, #10
 80006be:	4628      	mov	r0, r5
 80006c0:	f000 f9eb 	bl	8000a9a <__swbuf_r>
 80006c4:	3001      	adds	r0, #1
 80006c6:	d0d7      	beq.n	8000678 <_puts_r+0x38>
 80006c8:	250a      	movs	r5, #10
 80006ca:	e7d7      	b.n	800067c <_puts_r+0x3c>
 80006cc:	4622      	mov	r2, r4
 80006ce:	4628      	mov	r0, r5
 80006d0:	f000 f9e3 	bl	8000a9a <__swbuf_r>
 80006d4:	3001      	adds	r0, #1
 80006d6:	d1e7      	bne.n	80006a8 <_puts_r+0x68>
 80006d8:	e7ce      	b.n	8000678 <_puts_r+0x38>
 80006da:	3e01      	subs	r6, #1
 80006dc:	e7e4      	b.n	80006a8 <_puts_r+0x68>
 80006de:	6823      	ldr	r3, [r4, #0]
 80006e0:	1c5a      	adds	r2, r3, #1
 80006e2:	6022      	str	r2, [r4, #0]
 80006e4:	220a      	movs	r2, #10
 80006e6:	701a      	strb	r2, [r3, #0]
 80006e8:	e7ee      	b.n	80006c8 <_puts_r+0x88>
	...

080006ec <puts>:
 80006ec:	4b02      	ldr	r3, [pc, #8]	@ (80006f8 <puts+0xc>)
 80006ee:	4601      	mov	r1, r0
 80006f0:	6818      	ldr	r0, [r3, #0]
 80006f2:	f7ff bfa5 	b.w	8000640 <_puts_r>
 80006f6:	bf00      	nop
 80006f8:	20000018 	.word	0x20000018

080006fc <memset>:
 80006fc:	4402      	add	r2, r0
 80006fe:	4603      	mov	r3, r0
 8000700:	4293      	cmp	r3, r2
 8000702:	d100      	bne.n	8000706 <memset+0xa>
 8000704:	4770      	bx	lr
 8000706:	f803 1b01 	strb.w	r1, [r3], #1
 800070a:	e7f9      	b.n	8000700 <memset+0x4>

0800070c <__errno>:
 800070c:	4b01      	ldr	r3, [pc, #4]	@ (8000714 <__errno+0x8>)
 800070e:	6818      	ldr	r0, [r3, #0]
 8000710:	4770      	bx	lr
 8000712:	bf00      	nop
 8000714:	20000018 	.word	0x20000018

08000718 <__libc_init_array>:
 8000718:	b570      	push	{r4, r5, r6, lr}
 800071a:	4d0d      	ldr	r5, [pc, #52]	@ (8000750 <__libc_init_array+0x38>)
 800071c:	4c0d      	ldr	r4, [pc, #52]	@ (8000754 <__libc_init_array+0x3c>)
 800071e:	1b64      	subs	r4, r4, r5
 8000720:	10a4      	asrs	r4, r4, #2
 8000722:	2600      	movs	r6, #0
 8000724:	42a6      	cmp	r6, r4
 8000726:	d109      	bne.n	800073c <__libc_init_array+0x24>
 8000728:	4d0b      	ldr	r5, [pc, #44]	@ (8000758 <__libc_init_array+0x40>)
 800072a:	4c0c      	ldr	r4, [pc, #48]	@ (800075c <__libc_init_array+0x44>)
 800072c:	f000 fb6e 	bl	8000e0c <_init>
 8000730:	1b64      	subs	r4, r4, r5
 8000732:	10a4      	asrs	r4, r4, #2
 8000734:	2600      	movs	r6, #0
 8000736:	42a6      	cmp	r6, r4
 8000738:	d105      	bne.n	8000746 <__libc_init_array+0x2e>
 800073a:	bd70      	pop	{r4, r5, r6, pc}
 800073c:	f855 3b04 	ldr.w	r3, [r5], #4
 8000740:	4798      	blx	r3
 8000742:	3601      	adds	r6, #1
 8000744:	e7ee      	b.n	8000724 <__libc_init_array+0xc>
 8000746:	f855 3b04 	ldr.w	r3, [r5], #4
 800074a:	4798      	blx	r3
 800074c:	3601      	adds	r6, #1
 800074e:	e7f2      	b.n	8000736 <__libc_init_array+0x1e>
 8000750:	08000e50 	.word	0x08000e50
 8000754:	08000e50 	.word	0x08000e50
 8000758:	08000e50 	.word	0x08000e50
 800075c:	08000e54 	.word	0x08000e54

08000760 <__retarget_lock_init_recursive>:
 8000760:	4770      	bx	lr

08000762 <__retarget_lock_acquire_recursive>:
 8000762:	4770      	bx	lr

08000764 <__retarget_lock_release_recursive>:
 8000764:	4770      	bx	lr
	...

08000768 <sbrk_aligned>:
 8000768:	b570      	push	{r4, r5, r6, lr}
 800076a:	4e0f      	ldr	r6, [pc, #60]	@ (80007a8 <sbrk_aligned+0x40>)
 800076c:	460c      	mov	r4, r1
 800076e:	6831      	ldr	r1, [r6, #0]
 8000770:	4605      	mov	r5, r0
 8000772:	b911      	cbnz	r1, 800077a <sbrk_aligned+0x12>
 8000774:	f000 fabc 	bl	8000cf0 <_sbrk_r>
 8000778:	6030      	str	r0, [r6, #0]
 800077a:	4621      	mov	r1, r4
 800077c:	4628      	mov	r0, r5
 800077e:	f000 fab7 	bl	8000cf0 <_sbrk_r>
 8000782:	1c43      	adds	r3, r0, #1
 8000784:	d103      	bne.n	800078e <sbrk_aligned+0x26>
 8000786:	f04f 34ff 	mov.w	r4, #4294967295	@ 0xffffffff
 800078a:	4620      	mov	r0, r4
 800078c:	bd70      	pop	{r4, r5, r6, pc}
 800078e:	1cc4      	adds	r4, r0, #3
 8000790:	f024 0403 	bic.w	r4, r4, #3
 8000794:	42a0      	cmp	r0, r4
 8000796:	d0f8      	beq.n	800078a <sbrk_aligned+0x22>
 8000798:	1a21      	subs	r1, r4, r0
 800079a:	4628      	mov	r0, r5
 800079c:	f000 faa8 	bl	8000cf0 <_sbrk_r>
 80007a0:	3001      	adds	r0, #1
 80007a2:	d1f2      	bne.n	800078a <sbrk_aligned+0x22>
 80007a4:	e7ef      	b.n	8000786 <sbrk_aligned+0x1e>
 80007a6:	bf00      	nop
 80007a8:	200001c8 	.word	0x200001c8

080007ac <_malloc_r>:
 80007ac:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 80007b0:	1ccd      	adds	r5, r1, #3
 80007b2:	f025 0503 	bic.w	r5, r5, #3
 80007b6:	3508      	adds	r5, #8
 80007b8:	2d0c      	cmp	r5, #12
 80007ba:	bf38      	it	cc
 80007bc:	250c      	movcc	r5, #12
 80007be:	2d00      	cmp	r5, #0
 80007c0:	4606      	mov	r6, r0
 80007c2:	db01      	blt.n	80007c8 <_malloc_r+0x1c>
 80007c4:	42a9      	cmp	r1, r5
 80007c6:	d904      	bls.n	80007d2 <_malloc_r+0x26>
 80007c8:	230c      	movs	r3, #12
 80007ca:	6033      	str	r3, [r6, #0]
 80007cc:	2000      	movs	r0, #0
 80007ce:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 80007d2:	f8df 80d4 	ldr.w	r8, [pc, #212]	@ 80008a8 <_malloc_r+0xfc>
 80007d6:	f000 f911 	bl	80009fc <__malloc_lock>
 80007da:	f8d8 3000 	ldr.w	r3, [r8]
 80007de:	461c      	mov	r4, r3
 80007e0:	bb44      	cbnz	r4, 8000834 <_malloc_r+0x88>
 80007e2:	4629      	mov	r1, r5
 80007e4:	4630      	mov	r0, r6
 80007e6:	f7ff ffbf 	bl	8000768 <sbrk_aligned>
 80007ea:	1c43      	adds	r3, r0, #1
 80007ec:	4604      	mov	r4, r0
 80007ee:	d158      	bne.n	80008a2 <_malloc_r+0xf6>
 80007f0:	f8d8 4000 	ldr.w	r4, [r8]
 80007f4:	4627      	mov	r7, r4
 80007f6:	2f00      	cmp	r7, #0
 80007f8:	d143      	bne.n	8000882 <_malloc_r+0xd6>
 80007fa:	2c00      	cmp	r4, #0
 80007fc:	d04b      	beq.n	8000896 <_malloc_r+0xea>
 80007fe:	6823      	ldr	r3, [r4, #0]
 8000800:	4639      	mov	r1, r7
 8000802:	4630      	mov	r0, r6
 8000804:	eb04 0903 	add.w	r9, r4, r3
 8000808:	f000 fa72 	bl	8000cf0 <_sbrk_r>
 800080c:	4581      	cmp	r9, r0
 800080e:	d142      	bne.n	8000896 <_malloc_r+0xea>
 8000810:	6821      	ldr	r1, [r4, #0]
 8000812:	1a6d      	subs	r5, r5, r1
 8000814:	4629      	mov	r1, r5
 8000816:	4630      	mov	r0, r6
 8000818:	f7ff ffa6 	bl	8000768 <sbrk_aligned>
 800081c:	3001      	adds	r0, #1
 800081e:	d03a      	beq.n	8000896 <_malloc_r+0xea>
 8000820:	6823      	ldr	r3, [r4, #0]
 8000822:	442b      	add	r3, r5
 8000824:	6023      	str	r3, [r4, #0]
 8000826:	f8d8 3000 	ldr.w	r3, [r8]
 800082a:	685a      	ldr	r2, [r3, #4]
 800082c:	bb62      	cbnz	r2, 8000888 <_malloc_r+0xdc>
 800082e:	f8c8 7000 	str.w	r7, [r8]
 8000832:	e00f      	b.n	8000854 <_malloc_r+0xa8>
 8000834:	6822      	ldr	r2, [r4, #0]
 8000836:	1b52      	subs	r2, r2, r5
 8000838:	d420      	bmi.n	800087c <_malloc_r+0xd0>
 800083a:	2a0b      	cmp	r2, #11
 800083c:	d917      	bls.n	800086e <_malloc_r+0xc2>
 800083e:	1961      	adds	r1, r4, r5
 8000840:	42a3      	cmp	r3, r4
 8000842:	6025      	str	r5, [r4, #0]
 8000844:	bf18      	it	ne
 8000846:	6059      	strne	r1, [r3, #4]
 8000848:	6863      	ldr	r3, [r4, #4]
 800084a:	bf08      	it	eq
 800084c:	f8c8 1000 	streq.w	r1, [r8]
 8000850:	5162      	str	r2, [r4, r5]
 8000852:	604b      	str	r3, [r1, #4]
 8000854:	4630      	mov	r0, r6
 8000856:	f000 f8d7 	bl	8000a08 <__malloc_unlock>
 800085a:	f104 000b 	add.w	r0, r4, #11
 800085e:	1d23      	adds	r3, r4, #4
 8000860:	f020 0007 	bic.w	r0, r0, #7
 8000864:	1ac2      	subs	r2, r0, r3
 8000866:	bf1c      	itt	ne
 8000868:	1a1b      	subne	r3, r3, r0
 800086a:	50a3      	strne	r3, [r4, r2]
 800086c:	e7af      	b.n	80007ce <_malloc_r+0x22>
 800086e:	6862      	ldr	r2, [r4, #4]
 8000870:	42a3      	cmp	r3, r4
 8000872:	bf0c      	ite	eq
 8000874:	f8c8 2000 	streq.w	r2, [r8]
 8000878:	605a      	strne	r2, [r3, #4]
 800087a:	e7eb      	b.n	8000854 <_malloc_r+0xa8>
 800087c:	4623      	mov	r3, r4
 800087e:	6864      	ldr	r4, [r4, #4]
 8000880:	e7ae      	b.n	80007e0 <_malloc_r+0x34>
 8000882:	463c      	mov	r4, r7
 8000884:	687f      	ldr	r7, [r7, #4]
 8000886:	e7b6      	b.n	80007f6 <_malloc_r+0x4a>
 8000888:	461a      	mov	r2, r3
 800088a:	685b      	ldr	r3, [r3, #4]
 800088c:	42a3      	cmp	r3, r4
 800088e:	d1fb      	bne.n	8000888 <_malloc_r+0xdc>
 8000890:	2300      	movs	r3, #0
 8000892:	6053      	str	r3, [r2, #4]
 8000894:	e7de      	b.n	8000854 <_malloc_r+0xa8>
 8000896:	230c      	movs	r3, #12
 8000898:	6033      	str	r3, [r6, #0]
 800089a:	4630      	mov	r0, r6
 800089c:	f000 f8b4 	bl	8000a08 <__malloc_unlock>
 80008a0:	e794      	b.n	80007cc <_malloc_r+0x20>
 80008a2:	6005      	str	r5, [r0, #0]
 80008a4:	e7d6      	b.n	8000854 <_malloc_r+0xa8>
 80008a6:	bf00      	nop
 80008a8:	200001cc 	.word	0x200001cc

080008ac <__sflush_r>:
 80008ac:	f9b1 200c 	ldrsh.w	r2, [r1, #12]
 80008b0:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 80008b2:	0716      	lsls	r6, r2, #28
 80008b4:	4605      	mov	r5, r0
 80008b6:	460c      	mov	r4, r1
 80008b8:	d454      	bmi.n	8000964 <__sflush_r+0xb8>
 80008ba:	684b      	ldr	r3, [r1, #4]
 80008bc:	2b00      	cmp	r3, #0
 80008be:	dc02      	bgt.n	80008c6 <__sflush_r+0x1a>
 80008c0:	6c0b      	ldr	r3, [r1, #64]	@ 0x40
 80008c2:	2b00      	cmp	r3, #0
 80008c4:	dd48      	ble.n	8000958 <__sflush_r+0xac>
 80008c6:	6ae6      	ldr	r6, [r4, #44]	@ 0x2c
 80008c8:	2e00      	cmp	r6, #0
 80008ca:	d045      	beq.n	8000958 <__sflush_r+0xac>
 80008cc:	2300      	movs	r3, #0
 80008ce:	f412 5280 	ands.w	r2, r2, #4096	@ 0x1000
 80008d2:	682f      	ldr	r7, [r5, #0]
 80008d4:	6a21      	ldr	r1, [r4, #32]
 80008d6:	602b      	str	r3, [r5, #0]
 80008d8:	d030      	beq.n	800093c <__sflush_r+0x90>
 80008da:	6d62      	ldr	r2, [r4, #84]	@ 0x54
 80008dc:	89a3      	ldrh	r3, [r4, #12]
 80008de:	0759      	lsls	r1, r3, #29
 80008e0:	d505      	bpl.n	80008ee <__sflush_r+0x42>
 80008e2:	6863      	ldr	r3, [r4, #4]
 80008e4:	1ad2      	subs	r2, r2, r3
 80008e6:	6b63      	ldr	r3, [r4, #52]	@ 0x34
 80008e8:	b10b      	cbz	r3, 80008ee <__sflush_r+0x42>
 80008ea:	6c23      	ldr	r3, [r4, #64]	@ 0x40
 80008ec:	1ad2      	subs	r2, r2, r3
 80008ee:	2300      	movs	r3, #0
 80008f0:	6ae6      	ldr	r6, [r4, #44]	@ 0x2c
 80008f2:	6a21      	ldr	r1, [r4, #32]
 80008f4:	4628      	mov	r0, r5
 80008f6:	47b0      	blx	r6
 80008f8:	1c43      	adds	r3, r0, #1
 80008fa:	89a3      	ldrh	r3, [r4, #12]
 80008fc:	d106      	bne.n	800090c <__sflush_r+0x60>
 80008fe:	6829      	ldr	r1, [r5, #0]
 8000900:	291d      	cmp	r1, #29
 8000902:	d82b      	bhi.n	800095c <__sflush_r+0xb0>
 8000904:	4a28      	ldr	r2, [pc, #160]	@ (80009a8 <__sflush_r+0xfc>)
 8000906:	40ca      	lsrs	r2, r1
 8000908:	07d6      	lsls	r6, r2, #31
 800090a:	d527      	bpl.n	800095c <__sflush_r+0xb0>
 800090c:	2200      	movs	r2, #0
 800090e:	6062      	str	r2, [r4, #4]
 8000910:	04d9      	lsls	r1, r3, #19
 8000912:	6922      	ldr	r2, [r4, #16]
 8000914:	6022      	str	r2, [r4, #0]
 8000916:	d504      	bpl.n	8000922 <__sflush_r+0x76>
 8000918:	1c42      	adds	r2, r0, #1
 800091a:	d101      	bne.n	8000920 <__sflush_r+0x74>
 800091c:	682b      	ldr	r3, [r5, #0]
 800091e:	b903      	cbnz	r3, 8000922 <__sflush_r+0x76>
 8000920:	6560      	str	r0, [r4, #84]	@ 0x54
 8000922:	6b61      	ldr	r1, [r4, #52]	@ 0x34
 8000924:	602f      	str	r7, [r5, #0]
 8000926:	b1b9      	cbz	r1, 8000958 <__sflush_r+0xac>
 8000928:	f104 0344 	add.w	r3, r4, #68	@ 0x44
 800092c:	4299      	cmp	r1, r3
 800092e:	d002      	beq.n	8000936 <__sflush_r+0x8a>
 8000930:	4628      	mov	r0, r5
 8000932:	f000 fa21 	bl	8000d78 <_free_r>
 8000936:	2300      	movs	r3, #0
 8000938:	6363      	str	r3, [r4, #52]	@ 0x34
 800093a:	e00d      	b.n	8000958 <__sflush_r+0xac>
 800093c:	2301      	movs	r3, #1
 800093e:	4628      	mov	r0, r5
 8000940:	47b0      	blx	r6
 8000942:	4602      	mov	r2, r0
 8000944:	1c50      	adds	r0, r2, #1
 8000946:	d1c9      	bne.n	80008dc <__sflush_r+0x30>
 8000948:	682b      	ldr	r3, [r5, #0]
 800094a:	2b00      	cmp	r3, #0
 800094c:	d0c6      	beq.n	80008dc <__sflush_r+0x30>
 800094e:	2b1d      	cmp	r3, #29
 8000950:	d001      	beq.n	8000956 <__sflush_r+0xaa>
 8000952:	2b16      	cmp	r3, #22
 8000954:	d11d      	bne.n	8000992 <__sflush_r+0xe6>
 8000956:	602f      	str	r7, [r5, #0]
 8000958:	2000      	movs	r0, #0
 800095a:	e021      	b.n	80009a0 <__sflush_r+0xf4>
 800095c:	f043 0340 	orr.w	r3, r3, #64	@ 0x40
 8000960:	b21b      	sxth	r3, r3
 8000962:	e01a      	b.n	800099a <__sflush_r+0xee>
 8000964:	690f      	ldr	r7, [r1, #16]
 8000966:	2f00      	cmp	r7, #0
 8000968:	d0f6      	beq.n	8000958 <__sflush_r+0xac>
 800096a:	0793      	lsls	r3, r2, #30
 800096c:	680e      	ldr	r6, [r1, #0]
 800096e:	bf08      	it	eq
 8000970:	694b      	ldreq	r3, [r1, #20]
 8000972:	600f      	str	r7, [r1, #0]
 8000974:	bf18      	it	ne
 8000976:	2300      	movne	r3, #0
 8000978:	1bf6      	subs	r6, r6, r7
 800097a:	608b      	str	r3, [r1, #8]
 800097c:	2e00      	cmp	r6, #0
 800097e:	ddeb      	ble.n	8000958 <__sflush_r+0xac>
 8000980:	6a21      	ldr	r1, [r4, #32]
 8000982:	f8d4 c028 	ldr.w	ip, [r4, #40]	@ 0x28
 8000986:	4633      	mov	r3, r6
 8000988:	463a      	mov	r2, r7
 800098a:	4628      	mov	r0, r5
 800098c:	47e0      	blx	ip
 800098e:	2800      	cmp	r0, #0
 8000990:	dc07      	bgt.n	80009a2 <__sflush_r+0xf6>
 8000992:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 8000996:	f043 0340 	orr.w	r3, r3, #64	@ 0x40
 800099a:	81a3      	strh	r3, [r4, #12]
 800099c:	f04f 30ff 	mov.w	r0, #4294967295	@ 0xffffffff
 80009a0:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 80009a2:	4407      	add	r7, r0
 80009a4:	1a36      	subs	r6, r6, r0
 80009a6:	e7e9      	b.n	800097c <__sflush_r+0xd0>
 80009a8:	20400001 	.word	0x20400001

080009ac <_fflush_r>:
 80009ac:	b538      	push	{r3, r4, r5, lr}
 80009ae:	690b      	ldr	r3, [r1, #16]
 80009b0:	4605      	mov	r5, r0
 80009b2:	460c      	mov	r4, r1
 80009b4:	b913      	cbnz	r3, 80009bc <_fflush_r+0x10>
 80009b6:	2500      	movs	r5, #0
 80009b8:	4628      	mov	r0, r5
 80009ba:	bd38      	pop	{r3, r4, r5, pc}
 80009bc:	b118      	cbz	r0, 80009c6 <_fflush_r+0x1a>
 80009be:	6a03      	ldr	r3, [r0, #32]
 80009c0:	b90b      	cbnz	r3, 80009c6 <_fflush_r+0x1a>
 80009c2:	f7ff fe07 	bl	80005d4 <__sinit>
 80009c6:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 80009ca:	2b00      	cmp	r3, #0
 80009cc:	d0f3      	beq.n	80009b6 <_fflush_r+0xa>
 80009ce:	6e62      	ldr	r2, [r4, #100]	@ 0x64
 80009d0:	07d0      	lsls	r0, r2, #31
 80009d2:	d404      	bmi.n	80009de <_fflush_r+0x32>
 80009d4:	0599      	lsls	r1, r3, #22
 80009d6:	d402      	bmi.n	80009de <_fflush_r+0x32>
 80009d8:	6da0      	ldr	r0, [r4, #88]	@ 0x58
 80009da:	f7ff fec2 	bl	8000762 <__retarget_lock_acquire_recursive>
 80009de:	4628      	mov	r0, r5
 80009e0:	4621      	mov	r1, r4
 80009e2:	f7ff ff63 	bl	80008ac <__sflush_r>
 80009e6:	6e63      	ldr	r3, [r4, #100]	@ 0x64
 80009e8:	07da      	lsls	r2, r3, #31
 80009ea:	4605      	mov	r5, r0
 80009ec:	d4e4      	bmi.n	80009b8 <_fflush_r+0xc>
 80009ee:	89a3      	ldrh	r3, [r4, #12]
 80009f0:	059b      	lsls	r3, r3, #22
 80009f2:	d4e1      	bmi.n	80009b8 <_fflush_r+0xc>
 80009f4:	6da0      	ldr	r0, [r4, #88]	@ 0x58
 80009f6:	f7ff feb5 	bl	8000764 <__retarget_lock_release_recursive>
 80009fa:	e7dd      	b.n	80009b8 <_fflush_r+0xc>

080009fc <__malloc_lock>:
 80009fc:	4801      	ldr	r0, [pc, #4]	@ (8000a04 <__malloc_lock+0x8>)
 80009fe:	f7ff beb0 	b.w	8000762 <__retarget_lock_acquire_recursive>
 8000a02:	bf00      	nop
 8000a04:	200001c4 	.word	0x200001c4

08000a08 <__malloc_unlock>:
 8000a08:	4801      	ldr	r0, [pc, #4]	@ (8000a10 <__malloc_unlock+0x8>)
 8000a0a:	f7ff beab 	b.w	8000764 <__retarget_lock_release_recursive>
 8000a0e:	bf00      	nop
 8000a10:	200001c4 	.word	0x200001c4

08000a14 <__sread>:
 8000a14:	b510      	push	{r4, lr}
 8000a16:	460c      	mov	r4, r1
 8000a18:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 8000a1c:	f000 f956 	bl	8000ccc <_read_r>
 8000a20:	2800      	cmp	r0, #0
 8000a22:	bfab      	itete	ge
 8000a24:	6d63      	ldrge	r3, [r4, #84]	@ 0x54
 8000a26:	89a3      	ldrhlt	r3, [r4, #12]
 8000a28:	181b      	addge	r3, r3, r0
 8000a2a:	f423 5380 	biclt.w	r3, r3, #4096	@ 0x1000
 8000a2e:	bfac      	ite	ge
 8000a30:	6563      	strge	r3, [r4, #84]	@ 0x54
 8000a32:	81a3      	strhlt	r3, [r4, #12]
 8000a34:	bd10      	pop	{r4, pc}

08000a36 <__swrite>:
 8000a36:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8000a3a:	461f      	mov	r7, r3
 8000a3c:	898b      	ldrh	r3, [r1, #12]
 8000a3e:	05db      	lsls	r3, r3, #23
 8000a40:	4605      	mov	r5, r0
 8000a42:	460c      	mov	r4, r1
 8000a44:	4616      	mov	r6, r2
 8000a46:	d505      	bpl.n	8000a54 <__swrite+0x1e>
 8000a48:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 8000a4c:	2302      	movs	r3, #2
 8000a4e:	2200      	movs	r2, #0
 8000a50:	f000 f92a 	bl	8000ca8 <_lseek_r>
 8000a54:	89a3      	ldrh	r3, [r4, #12]
 8000a56:	f9b4 100e 	ldrsh.w	r1, [r4, #14]
 8000a5a:	f423 5380 	bic.w	r3, r3, #4096	@ 0x1000
 8000a5e:	81a3      	strh	r3, [r4, #12]
 8000a60:	4632      	mov	r2, r6
 8000a62:	463b      	mov	r3, r7
 8000a64:	4628      	mov	r0, r5
 8000a66:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
 8000a6a:	f000 b951 	b.w	8000d10 <_write_r>

08000a6e <__sseek>:
 8000a6e:	b510      	push	{r4, lr}
 8000a70:	460c      	mov	r4, r1
 8000a72:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 8000a76:	f000 f917 	bl	8000ca8 <_lseek_r>
 8000a7a:	1c43      	adds	r3, r0, #1
 8000a7c:	89a3      	ldrh	r3, [r4, #12]
 8000a7e:	bf15      	itete	ne
 8000a80:	6560      	strne	r0, [r4, #84]	@ 0x54
 8000a82:	f423 5380 	biceq.w	r3, r3, #4096	@ 0x1000
 8000a86:	f443 5380 	orrne.w	r3, r3, #4096	@ 0x1000
 8000a8a:	81a3      	strheq	r3, [r4, #12]
 8000a8c:	bf18      	it	ne
 8000a8e:	81a3      	strhne	r3, [r4, #12]
 8000a90:	bd10      	pop	{r4, pc}

08000a92 <__sclose>:
 8000a92:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 8000a96:	f000 b94d 	b.w	8000d34 <_close_r>

08000a9a <__swbuf_r>:
 8000a9a:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8000a9c:	460e      	mov	r6, r1
 8000a9e:	4614      	mov	r4, r2
 8000aa0:	4605      	mov	r5, r0
 8000aa2:	b118      	cbz	r0, 8000aac <__swbuf_r+0x12>
 8000aa4:	6a03      	ldr	r3, [r0, #32]
 8000aa6:	b90b      	cbnz	r3, 8000aac <__swbuf_r+0x12>
 8000aa8:	f7ff fd94 	bl	80005d4 <__sinit>
 8000aac:	69a3      	ldr	r3, [r4, #24]
 8000aae:	60a3      	str	r3, [r4, #8]
 8000ab0:	89a3      	ldrh	r3, [r4, #12]
 8000ab2:	071a      	lsls	r2, r3, #28
 8000ab4:	d501      	bpl.n	8000aba <__swbuf_r+0x20>
 8000ab6:	6923      	ldr	r3, [r4, #16]
 8000ab8:	b943      	cbnz	r3, 8000acc <__swbuf_r+0x32>
 8000aba:	4621      	mov	r1, r4
 8000abc:	4628      	mov	r0, r5
 8000abe:	f000 f82b 	bl	8000b18 <__swsetup_r>
 8000ac2:	b118      	cbz	r0, 8000acc <__swbuf_r+0x32>
 8000ac4:	f04f 37ff 	mov.w	r7, #4294967295	@ 0xffffffff
 8000ac8:	4638      	mov	r0, r7
 8000aca:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 8000acc:	6823      	ldr	r3, [r4, #0]
 8000ace:	6922      	ldr	r2, [r4, #16]
 8000ad0:	1a98      	subs	r0, r3, r2
 8000ad2:	6963      	ldr	r3, [r4, #20]
 8000ad4:	b2f6      	uxtb	r6, r6
 8000ad6:	4283      	cmp	r3, r0
 8000ad8:	4637      	mov	r7, r6
 8000ada:	dc05      	bgt.n	8000ae8 <__swbuf_r+0x4e>
 8000adc:	4621      	mov	r1, r4
 8000ade:	4628      	mov	r0, r5
 8000ae0:	f7ff ff64 	bl	80009ac <_fflush_r>
 8000ae4:	2800      	cmp	r0, #0
 8000ae6:	d1ed      	bne.n	8000ac4 <__swbuf_r+0x2a>
 8000ae8:	68a3      	ldr	r3, [r4, #8]
 8000aea:	3b01      	subs	r3, #1
 8000aec:	60a3      	str	r3, [r4, #8]
 8000aee:	6823      	ldr	r3, [r4, #0]
 8000af0:	1c5a      	adds	r2, r3, #1
 8000af2:	6022      	str	r2, [r4, #0]
 8000af4:	701e      	strb	r6, [r3, #0]
 8000af6:	6962      	ldr	r2, [r4, #20]
 8000af8:	1c43      	adds	r3, r0, #1
 8000afa:	429a      	cmp	r2, r3
 8000afc:	d004      	beq.n	8000b08 <__swbuf_r+0x6e>
 8000afe:	89a3      	ldrh	r3, [r4, #12]
 8000b00:	07db      	lsls	r3, r3, #31
 8000b02:	d5e1      	bpl.n	8000ac8 <__swbuf_r+0x2e>
 8000b04:	2e0a      	cmp	r6, #10
 8000b06:	d1df      	bne.n	8000ac8 <__swbuf_r+0x2e>
 8000b08:	4621      	mov	r1, r4
 8000b0a:	4628      	mov	r0, r5
 8000b0c:	f7ff ff4e 	bl	80009ac <_fflush_r>
 8000b10:	2800      	cmp	r0, #0
 8000b12:	d0d9      	beq.n	8000ac8 <__swbuf_r+0x2e>
 8000b14:	e7d6      	b.n	8000ac4 <__swbuf_r+0x2a>
	...

08000b18 <__swsetup_r>:
 8000b18:	b538      	push	{r3, r4, r5, lr}
 8000b1a:	4b29      	ldr	r3, [pc, #164]	@ (8000bc0 <__swsetup_r+0xa8>)
 8000b1c:	4605      	mov	r5, r0
 8000b1e:	6818      	ldr	r0, [r3, #0]
 8000b20:	460c      	mov	r4, r1
 8000b22:	b118      	cbz	r0, 8000b2c <__swsetup_r+0x14>
 8000b24:	6a03      	ldr	r3, [r0, #32]
 8000b26:	b90b      	cbnz	r3, 8000b2c <__swsetup_r+0x14>
 8000b28:	f7ff fd54 	bl	80005d4 <__sinit>
 8000b2c:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 8000b30:	0719      	lsls	r1, r3, #28
 8000b32:	d422      	bmi.n	8000b7a <__swsetup_r+0x62>
 8000b34:	06da      	lsls	r2, r3, #27
 8000b36:	d407      	bmi.n	8000b48 <__swsetup_r+0x30>
 8000b38:	2209      	movs	r2, #9
 8000b3a:	602a      	str	r2, [r5, #0]
 8000b3c:	f043 0340 	orr.w	r3, r3, #64	@ 0x40
 8000b40:	81a3      	strh	r3, [r4, #12]
 8000b42:	f04f 30ff 	mov.w	r0, #4294967295	@ 0xffffffff
 8000b46:	e033      	b.n	8000bb0 <__swsetup_r+0x98>
 8000b48:	0758      	lsls	r0, r3, #29
 8000b4a:	d512      	bpl.n	8000b72 <__swsetup_r+0x5a>
 8000b4c:	6b61      	ldr	r1, [r4, #52]	@ 0x34
 8000b4e:	b141      	cbz	r1, 8000b62 <__swsetup_r+0x4a>
 8000b50:	f104 0344 	add.w	r3, r4, #68	@ 0x44
 8000b54:	4299      	cmp	r1, r3
 8000b56:	d002      	beq.n	8000b5e <__swsetup_r+0x46>
 8000b58:	4628      	mov	r0, r5
 8000b5a:	f000 f90d 	bl	8000d78 <_free_r>
 8000b5e:	2300      	movs	r3, #0
 8000b60:	6363      	str	r3, [r4, #52]	@ 0x34
 8000b62:	89a3      	ldrh	r3, [r4, #12]
 8000b64:	f023 0324 	bic.w	r3, r3, #36	@ 0x24
 8000b68:	81a3      	strh	r3, [r4, #12]
 8000b6a:	2300      	movs	r3, #0
 8000b6c:	6063      	str	r3, [r4, #4]
 8000b6e:	6923      	ldr	r3, [r4, #16]
 8000b70:	6023      	str	r3, [r4, #0]
 8000b72:	89a3      	ldrh	r3, [r4, #12]
 8000b74:	f043 0308 	orr.w	r3, r3, #8
 8000b78:	81a3      	strh	r3, [r4, #12]
 8000b7a:	6923      	ldr	r3, [r4, #16]
 8000b7c:	b94b      	cbnz	r3, 8000b92 <__swsetup_r+0x7a>
 8000b7e:	89a3      	ldrh	r3, [r4, #12]
 8000b80:	f403 7320 	and.w	r3, r3, #640	@ 0x280
 8000b84:	f5b3 7f00 	cmp.w	r3, #512	@ 0x200
 8000b88:	d003      	beq.n	8000b92 <__swsetup_r+0x7a>
 8000b8a:	4621      	mov	r1, r4
 8000b8c:	4628      	mov	r0, r5
 8000b8e:	f000 f83f 	bl	8000c10 <__smakebuf_r>
 8000b92:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 8000b96:	f013 0201 	ands.w	r2, r3, #1
 8000b9a:	d00a      	beq.n	8000bb2 <__swsetup_r+0x9a>
 8000b9c:	2200      	movs	r2, #0
 8000b9e:	60a2      	str	r2, [r4, #8]
 8000ba0:	6962      	ldr	r2, [r4, #20]
 8000ba2:	4252      	negs	r2, r2
 8000ba4:	61a2      	str	r2, [r4, #24]
 8000ba6:	6922      	ldr	r2, [r4, #16]
 8000ba8:	b942      	cbnz	r2, 8000bbc <__swsetup_r+0xa4>
 8000baa:	f013 0080 	ands.w	r0, r3, #128	@ 0x80
 8000bae:	d1c5      	bne.n	8000b3c <__swsetup_r+0x24>
 8000bb0:	bd38      	pop	{r3, r4, r5, pc}
 8000bb2:	0799      	lsls	r1, r3, #30
 8000bb4:	bf58      	it	pl
 8000bb6:	6962      	ldrpl	r2, [r4, #20]
 8000bb8:	60a2      	str	r2, [r4, #8]
 8000bba:	e7f4      	b.n	8000ba6 <__swsetup_r+0x8e>
 8000bbc:	2000      	movs	r0, #0
 8000bbe:	e7f7      	b.n	8000bb0 <__swsetup_r+0x98>
 8000bc0:	20000018 	.word	0x20000018

08000bc4 <__swhatbuf_r>:
 8000bc4:	b570      	push	{r4, r5, r6, lr}
 8000bc6:	460c      	mov	r4, r1
 8000bc8:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 8000bcc:	2900      	cmp	r1, #0
 8000bce:	b096      	sub	sp, #88	@ 0x58
 8000bd0:	4615      	mov	r5, r2
 8000bd2:	461e      	mov	r6, r3
 8000bd4:	da0d      	bge.n	8000bf2 <__swhatbuf_r+0x2e>
 8000bd6:	89a3      	ldrh	r3, [r4, #12]
 8000bd8:	f013 0f80 	tst.w	r3, #128	@ 0x80
 8000bdc:	f04f 0100 	mov.w	r1, #0
 8000be0:	bf14      	ite	ne
 8000be2:	2340      	movne	r3, #64	@ 0x40
 8000be4:	f44f 6380 	moveq.w	r3, #1024	@ 0x400
 8000be8:	2000      	movs	r0, #0
 8000bea:	6031      	str	r1, [r6, #0]
 8000bec:	602b      	str	r3, [r5, #0]
 8000bee:	b016      	add	sp, #88	@ 0x58
 8000bf0:	bd70      	pop	{r4, r5, r6, pc}
 8000bf2:	466a      	mov	r2, sp
 8000bf4:	f000 f8ae 	bl	8000d54 <_fstat_r>
 8000bf8:	2800      	cmp	r0, #0
 8000bfa:	dbec      	blt.n	8000bd6 <__swhatbuf_r+0x12>
 8000bfc:	9901      	ldr	r1, [sp, #4]
 8000bfe:	f401 4170 	and.w	r1, r1, #61440	@ 0xf000
 8000c02:	f5a1 5300 	sub.w	r3, r1, #8192	@ 0x2000
 8000c06:	4259      	negs	r1, r3
 8000c08:	4159      	adcs	r1, r3
 8000c0a:	f44f 6380 	mov.w	r3, #1024	@ 0x400
 8000c0e:	e7eb      	b.n	8000be8 <__swhatbuf_r+0x24>

08000c10 <__smakebuf_r>:
 8000c10:	898b      	ldrh	r3, [r1, #12]
 8000c12:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 8000c14:	079d      	lsls	r5, r3, #30
 8000c16:	4606      	mov	r6, r0
 8000c18:	460c      	mov	r4, r1
 8000c1a:	d507      	bpl.n	8000c2c <__smakebuf_r+0x1c>
 8000c1c:	f104 0347 	add.w	r3, r4, #71	@ 0x47
 8000c20:	6023      	str	r3, [r4, #0]
 8000c22:	6123      	str	r3, [r4, #16]
 8000c24:	2301      	movs	r3, #1
 8000c26:	6163      	str	r3, [r4, #20]
 8000c28:	b003      	add	sp, #12
 8000c2a:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8000c2c:	ab01      	add	r3, sp, #4
 8000c2e:	466a      	mov	r2, sp
 8000c30:	f7ff ffc8 	bl	8000bc4 <__swhatbuf_r>
 8000c34:	9f00      	ldr	r7, [sp, #0]
 8000c36:	4605      	mov	r5, r0
 8000c38:	4639      	mov	r1, r7
 8000c3a:	4630      	mov	r0, r6
 8000c3c:	f7ff fdb6 	bl	80007ac <_malloc_r>
 8000c40:	b948      	cbnz	r0, 8000c56 <__smakebuf_r+0x46>
 8000c42:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 8000c46:	059a      	lsls	r2, r3, #22
 8000c48:	d4ee      	bmi.n	8000c28 <__smakebuf_r+0x18>
 8000c4a:	f023 0303 	bic.w	r3, r3, #3
 8000c4e:	f043 0302 	orr.w	r3, r3, #2
 8000c52:	81a3      	strh	r3, [r4, #12]
 8000c54:	e7e2      	b.n	8000c1c <__smakebuf_r+0xc>
 8000c56:	89a3      	ldrh	r3, [r4, #12]
 8000c58:	6020      	str	r0, [r4, #0]
 8000c5a:	f043 0380 	orr.w	r3, r3, #128	@ 0x80
 8000c5e:	81a3      	strh	r3, [r4, #12]
 8000c60:	9b01      	ldr	r3, [sp, #4]
 8000c62:	e9c4 0704 	strd	r0, r7, [r4, #16]
 8000c66:	b15b      	cbz	r3, 8000c80 <__smakebuf_r+0x70>
 8000c68:	f9b4 100e 	ldrsh.w	r1, [r4, #14]
 8000c6c:	4630      	mov	r0, r6
 8000c6e:	f000 f80b 	bl	8000c88 <_isatty_r>
 8000c72:	b128      	cbz	r0, 8000c80 <__smakebuf_r+0x70>
 8000c74:	89a3      	ldrh	r3, [r4, #12]
 8000c76:	f023 0303 	bic.w	r3, r3, #3
 8000c7a:	f043 0301 	orr.w	r3, r3, #1
 8000c7e:	81a3      	strh	r3, [r4, #12]
 8000c80:	89a3      	ldrh	r3, [r4, #12]
 8000c82:	431d      	orrs	r5, r3
 8000c84:	81a5      	strh	r5, [r4, #12]
 8000c86:	e7cf      	b.n	8000c28 <__smakebuf_r+0x18>

08000c88 <_isatty_r>:
 8000c88:	b538      	push	{r3, r4, r5, lr}
 8000c8a:	4d06      	ldr	r5, [pc, #24]	@ (8000ca4 <_isatty_r+0x1c>)
 8000c8c:	2300      	movs	r3, #0
 8000c8e:	4604      	mov	r4, r0
 8000c90:	4608      	mov	r0, r1
 8000c92:	602b      	str	r3, [r5, #0]
 8000c94:	f7ff fb9b 	bl	80003ce <_isatty>
 8000c98:	1c43      	adds	r3, r0, #1
 8000c9a:	d102      	bne.n	8000ca2 <_isatty_r+0x1a>
 8000c9c:	682b      	ldr	r3, [r5, #0]
 8000c9e:	b103      	cbz	r3, 8000ca2 <_isatty_r+0x1a>
 8000ca0:	6023      	str	r3, [r4, #0]
 8000ca2:	bd38      	pop	{r3, r4, r5, pc}
 8000ca4:	200001d0 	.word	0x200001d0

08000ca8 <_lseek_r>:
 8000ca8:	b538      	push	{r3, r4, r5, lr}
 8000caa:	4d07      	ldr	r5, [pc, #28]	@ (8000cc8 <_lseek_r+0x20>)
 8000cac:	4604      	mov	r4, r0
 8000cae:	4608      	mov	r0, r1
 8000cb0:	4611      	mov	r1, r2
 8000cb2:	2200      	movs	r2, #0
 8000cb4:	602a      	str	r2, [r5, #0]
 8000cb6:	461a      	mov	r2, r3
 8000cb8:	f7ff fb93 	bl	80003e2 <_lseek>
 8000cbc:	1c43      	adds	r3, r0, #1
 8000cbe:	d102      	bne.n	8000cc6 <_lseek_r+0x1e>
 8000cc0:	682b      	ldr	r3, [r5, #0]
 8000cc2:	b103      	cbz	r3, 8000cc6 <_lseek_r+0x1e>
 8000cc4:	6023      	str	r3, [r4, #0]
 8000cc6:	bd38      	pop	{r3, r4, r5, pc}
 8000cc8:	200001d0 	.word	0x200001d0

08000ccc <_read_r>:
 8000ccc:	b538      	push	{r3, r4, r5, lr}
 8000cce:	4d07      	ldr	r5, [pc, #28]	@ (8000cec <_read_r+0x20>)
 8000cd0:	4604      	mov	r4, r0
 8000cd2:	4608      	mov	r0, r1
 8000cd4:	4611      	mov	r1, r2
 8000cd6:	2200      	movs	r2, #0
 8000cd8:	602a      	str	r2, [r5, #0]
 8000cda:	461a      	mov	r2, r3
 8000cdc:	f7ff fb24 	bl	8000328 <_read>
 8000ce0:	1c43      	adds	r3, r0, #1
 8000ce2:	d102      	bne.n	8000cea <_read_r+0x1e>
 8000ce4:	682b      	ldr	r3, [r5, #0]
 8000ce6:	b103      	cbz	r3, 8000cea <_read_r+0x1e>
 8000ce8:	6023      	str	r3, [r4, #0]
 8000cea:	bd38      	pop	{r3, r4, r5, pc}
 8000cec:	200001d0 	.word	0x200001d0

08000cf0 <_sbrk_r>:
 8000cf0:	b538      	push	{r3, r4, r5, lr}
 8000cf2:	4d06      	ldr	r5, [pc, #24]	@ (8000d0c <_sbrk_r+0x1c>)
 8000cf4:	2300      	movs	r3, #0
 8000cf6:	4604      	mov	r4, r0
 8000cf8:	4608      	mov	r0, r1
 8000cfa:	602b      	str	r3, [r5, #0]
 8000cfc:	f7ff fb7e 	bl	80003fc <_sbrk>
 8000d00:	1c43      	adds	r3, r0, #1
 8000d02:	d102      	bne.n	8000d0a <_sbrk_r+0x1a>
 8000d04:	682b      	ldr	r3, [r5, #0]
 8000d06:	b103      	cbz	r3, 8000d0a <_sbrk_r+0x1a>
 8000d08:	6023      	str	r3, [r4, #0]
 8000d0a:	bd38      	pop	{r3, r4, r5, pc}
 8000d0c:	200001d0 	.word	0x200001d0

08000d10 <_write_r>:
 8000d10:	b538      	push	{r3, r4, r5, lr}
 8000d12:	4d07      	ldr	r5, [pc, #28]	@ (8000d30 <_write_r+0x20>)
 8000d14:	4604      	mov	r4, r0
 8000d16:	4608      	mov	r0, r1
 8000d18:	4611      	mov	r1, r2
 8000d1a:	2200      	movs	r2, #0
 8000d1c:	602a      	str	r2, [r5, #0]
 8000d1e:	461a      	mov	r2, r3
 8000d20:	f7ff fb1f 	bl	8000362 <_write>
 8000d24:	1c43      	adds	r3, r0, #1
 8000d26:	d102      	bne.n	8000d2e <_write_r+0x1e>
 8000d28:	682b      	ldr	r3, [r5, #0]
 8000d2a:	b103      	cbz	r3, 8000d2e <_write_r+0x1e>
 8000d2c:	6023      	str	r3, [r4, #0]
 8000d2e:	bd38      	pop	{r3, r4, r5, pc}
 8000d30:	200001d0 	.word	0x200001d0

08000d34 <_close_r>:
 8000d34:	b538      	push	{r3, r4, r5, lr}
 8000d36:	4d06      	ldr	r5, [pc, #24]	@ (8000d50 <_close_r+0x1c>)
 8000d38:	2300      	movs	r3, #0
 8000d3a:	4604      	mov	r4, r0
 8000d3c:	4608      	mov	r0, r1
 8000d3e:	602b      	str	r3, [r5, #0]
 8000d40:	f7ff fb2b 	bl	800039a <_close>
 8000d44:	1c43      	adds	r3, r0, #1
 8000d46:	d102      	bne.n	8000d4e <_close_r+0x1a>
 8000d48:	682b      	ldr	r3, [r5, #0]
 8000d4a:	b103      	cbz	r3, 8000d4e <_close_r+0x1a>
 8000d4c:	6023      	str	r3, [r4, #0]
 8000d4e:	bd38      	pop	{r3, r4, r5, pc}
 8000d50:	200001d0 	.word	0x200001d0

08000d54 <_fstat_r>:
 8000d54:	b538      	push	{r3, r4, r5, lr}
 8000d56:	4d07      	ldr	r5, [pc, #28]	@ (8000d74 <_fstat_r+0x20>)
 8000d58:	2300      	movs	r3, #0
 8000d5a:	4604      	mov	r4, r0
 8000d5c:	4608      	mov	r0, r1
 8000d5e:	4611      	mov	r1, r2
 8000d60:	602b      	str	r3, [r5, #0]
 8000d62:	f7ff fb25 	bl	80003b0 <_fstat>
 8000d66:	1c43      	adds	r3, r0, #1
 8000d68:	d102      	bne.n	8000d70 <_fstat_r+0x1c>
 8000d6a:	682b      	ldr	r3, [r5, #0]
 8000d6c:	b103      	cbz	r3, 8000d70 <_fstat_r+0x1c>
 8000d6e:	6023      	str	r3, [r4, #0]
 8000d70:	bd38      	pop	{r3, r4, r5, pc}
 8000d72:	bf00      	nop
 8000d74:	200001d0 	.word	0x200001d0

08000d78 <_free_r>:
 8000d78:	b538      	push	{r3, r4, r5, lr}
 8000d7a:	4605      	mov	r5, r0
 8000d7c:	2900      	cmp	r1, #0
 8000d7e:	d041      	beq.n	8000e04 <_free_r+0x8c>
 8000d80:	f851 3c04 	ldr.w	r3, [r1, #-4]
 8000d84:	1f0c      	subs	r4, r1, #4
 8000d86:	2b00      	cmp	r3, #0
 8000d88:	bfb8      	it	lt
 8000d8a:	18e4      	addlt	r4, r4, r3
 8000d8c:	f7ff fe36 	bl	80009fc <__malloc_lock>
 8000d90:	4a1d      	ldr	r2, [pc, #116]	@ (8000e08 <_free_r+0x90>)
 8000d92:	6813      	ldr	r3, [r2, #0]
 8000d94:	b933      	cbnz	r3, 8000da4 <_free_r+0x2c>
 8000d96:	6063      	str	r3, [r4, #4]
 8000d98:	6014      	str	r4, [r2, #0]
 8000d9a:	4628      	mov	r0, r5
 8000d9c:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 8000da0:	f7ff be32 	b.w	8000a08 <__malloc_unlock>
 8000da4:	42a3      	cmp	r3, r4
 8000da6:	d908      	bls.n	8000dba <_free_r+0x42>
 8000da8:	6820      	ldr	r0, [r4, #0]
 8000daa:	1821      	adds	r1, r4, r0
 8000dac:	428b      	cmp	r3, r1
 8000dae:	bf01      	itttt	eq
 8000db0:	6819      	ldreq	r1, [r3, #0]
 8000db2:	685b      	ldreq	r3, [r3, #4]
 8000db4:	1809      	addeq	r1, r1, r0
 8000db6:	6021      	streq	r1, [r4, #0]
 8000db8:	e7ed      	b.n	8000d96 <_free_r+0x1e>
 8000dba:	461a      	mov	r2, r3
 8000dbc:	685b      	ldr	r3, [r3, #4]
 8000dbe:	b10b      	cbz	r3, 8000dc4 <_free_r+0x4c>
 8000dc0:	42a3      	cmp	r3, r4
 8000dc2:	d9fa      	bls.n	8000dba <_free_r+0x42>
 8000dc4:	6811      	ldr	r1, [r2, #0]
 8000dc6:	1850      	adds	r0, r2, r1
 8000dc8:	42a0      	cmp	r0, r4
 8000dca:	d10b      	bne.n	8000de4 <_free_r+0x6c>
 8000dcc:	6820      	ldr	r0, [r4, #0]
 8000dce:	4401      	add	r1, r0
 8000dd0:	1850      	adds	r0, r2, r1
 8000dd2:	4283      	cmp	r3, r0
 8000dd4:	6011      	str	r1, [r2, #0]
 8000dd6:	d1e0      	bne.n	8000d9a <_free_r+0x22>
 8000dd8:	6818      	ldr	r0, [r3, #0]
 8000dda:	685b      	ldr	r3, [r3, #4]
 8000ddc:	6053      	str	r3, [r2, #4]
 8000dde:	4408      	add	r0, r1
 8000de0:	6010      	str	r0, [r2, #0]
 8000de2:	e7da      	b.n	8000d9a <_free_r+0x22>
 8000de4:	d902      	bls.n	8000dec <_free_r+0x74>
 8000de6:	230c      	movs	r3, #12
 8000de8:	602b      	str	r3, [r5, #0]
 8000dea:	e7d6      	b.n	8000d9a <_free_r+0x22>
 8000dec:	6820      	ldr	r0, [r4, #0]
 8000dee:	1821      	adds	r1, r4, r0
 8000df0:	428b      	cmp	r3, r1
 8000df2:	bf04      	itt	eq
 8000df4:	6819      	ldreq	r1, [r3, #0]
 8000df6:	685b      	ldreq	r3, [r3, #4]
 8000df8:	6063      	str	r3, [r4, #4]
 8000dfa:	bf04      	itt	eq
 8000dfc:	1809      	addeq	r1, r1, r0
 8000dfe:	6021      	streq	r1, [r4, #0]
 8000e00:	6054      	str	r4, [r2, #4]
 8000e02:	e7ca      	b.n	8000d9a <_free_r+0x22>
 8000e04:	bd38      	pop	{r3, r4, r5, pc}
 8000e06:	bf00      	nop
 8000e08:	200001cc 	.word	0x200001cc

08000e0c <_init>:
 8000e0c:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8000e0e:	bf00      	nop
 8000e10:	bcf8      	pop	{r3, r4, r5, r6, r7}
 8000e12:	bc08      	pop	{r3}
 8000e14:	469e      	mov	lr, r3
 8000e16:	4770      	bx	lr

08000e18 <_fini>:
 8000e18:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8000e1a:	bf00      	nop
 8000e1c:	bcf8      	pop	{r3, r4, r5, r6, r7}
 8000e1e:	bc08      	pop	{r3}
 8000e20:	469e      	mov	lr, r3
 8000e22:	4770      	bx	lr
